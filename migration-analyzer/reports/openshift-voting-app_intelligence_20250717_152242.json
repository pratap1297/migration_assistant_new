{
  "repository_url": "https://github.com/end-of-game/openshift-voting-app",
  "analysis_timestamp": "2025-07-17T15:22:42.485150",
  "summary": {
    "total_components": 3,
    "component_types": {
      "microservice": 1,
      "application": 2
    },
    "languages": [
      "unknown",
      "python"
    ],
    "containerization_status": 2,
    "has_kubernetes": true,
    "has_docker_compose": false,
    "ci_cd_pipelines": 0,
    "quality_gates": 0,
    "security_scans": 0,
    "external_services": 6,
    "datasources": 0,
    "secrets_management": 0,
    "business_criticality": "LOW",
    "compliance_requirements": [],
    "security_findings": {
      "hardcoded_secrets": 0,
      "vulnerabilities": 0
    },
    "git_history": {
      "total_commits": 0,
      "active_contributors": 0,
      "code_stability": "unknown",
      "release_cadence": "Unknown",
      "hotspot_files_count": 0,
      "development_patterns": []
    }
  },
  "components": {
    "result": {
      "name": "result",
      "path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\result",
      "type": "application",
      "language": "unknown",
      "runtime": "nodejs",
      "build_tool": "unknown",
      "packaging": "docker",
      "dependencies": [],
      "external_dependencies": [],
      "exposed_ports": [
        8080
      ],
      "environment_variables": {
        "TINI_VERSION": "v0.19.0",
        "PORT": "8080"
      },
      "volumes": [],
      "health_checks": [],
      "deployment_info": {},
      "business_context": {}
    },
    "worker": {
      "name": "worker",
      "path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\worker",
      "type": "application",
      "language": "unknown",
      "runtime": "unknown",
      "build_tool": "unknown",
      "packaging": "docker",
      "dependencies": [],
      "external_dependencies": [],
      "exposed_ports": [],
      "environment_variables": {},
      "volumes": [],
      "health_checks": [],
      "deployment_info": {},
      "business_context": {}
    },
    "src": {
      "name": "src",
      "path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\vote\\src",
      "type": "microservice",
      "language": "python",
      "runtime": "flask",
      "build_tool": "pip",
      "packaging": "wheel",
      "dependencies": [
        "Flask",
        "Redis",
        "gunicorn"
      ],
      "external_dependencies": [],
      "exposed_ports": [],
      "environment_variables": {},
      "volumes": [],
      "health_checks": [],
      "deployment_info": {},
      "business_context": {}
    }
  },
  "documentation_insights": {
    "application_purpose": "This project provides a reworked version of the Docker official voting application, designed for easy deployment in OpenShift. It allows users to vote for different options and view the results.",
    "business_criticality": "LOW",
    "compliance_requirements": [],
    "security_considerations": [
      "Allows default service account to run containers with any non-root user (using SCC 'nonroot').",
      "Demonstrates deployment with container images, Dockerfiles, and Source to Image (S2I) for image building.",
      "Mentions the importance of versioning YAML files using Git for tracking changes and automation."
    ],
    "technology_stack": [
      "OpenShift",
      "oc CLI",
      "git",
      "PostgreSQL (ephemeral)",
      "Redis (ephemeral)",
      "Dockerfile",
      "Source to Image (S2I)",
      "Kubernetes (concepts mentioned: Pod, DeploymentConfig, Service, Route, ImageStream, BuildConfig)",
      "postgresql",
      "redis",
      "kubernetes",
      "docker"
    ],
    "deployment_model": "Containerized microservices deployed on OpenShift (or compatible platforms like OKD, Minishift, CodeReady Containers).",
    "user_types": [
      "Developers deploying and managing applications on OpenShift.",
      "End-users interacting with the voting application to cast votes and view results."
    ],
    "integration_points": [
      "Connects to PostgreSQL for data storage (implicitly for results).",
      "Connects to Redis for caching or session management (implicitly)."
    ],
    "performance_requirements": [],
    "business_context_keywords": [
      "Voting",
      "Microservices"
    ],
    "architecture_patterns": [
      "Microservices",
      "microservices"
    ]
  },
  "infrastructure": {
    "containerization": {
      "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\result\\Dockerfile": {
        "base_images": [
          {
            "image": "node:10-slim",
            "stage": null
          }
        ],
        "exposed_ports": [
          8080
        ],
        "environment_variables": {
          "TINI_VERSION": "v0.19.0",
          "PORT": "8080"
        },
        "commands": [
          {
            "type": "CMD",
            "command": "[\"/tini\", \"--\", \"node\", \"server.js\"]"
          }
        ],
        "workdir": "/app",
        "user": "1001",
        "volumes": [],
        "labels": {},
        "build_stages": [],
        "package_managers": [
          "npm"
        ],
        "installed_packages": [],
        "analysis": {
          "is_multistage": false,
          "has_non_root_user": true,
          "exposes_services": true,
          "uses_environment_config": true
        }
      },
      "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\vote\\Dockerfile": {
        "base_images": [
          {
            "image": "python:3.9-slim",
            "stage": null
          }
        ],
        "exposed_ports": [
          8080
        ],
        "environment_variables": {
          "PATH": "/app/.local/bin/:${PATH}"
        },
        "commands": [
          {
            "type": "CMD",
            "command": "[\"gunicorn\", \"app:app\", \"-b\", \"0.0.0.0:8080\", \"--log-file\", \"-\", \"--access-logfile\", \"-\", \"--workers\", \"4\", \"--keep-alive\", \"0\"]"
          }
        ],
        "workdir": "/app",
        "user": "1001",
        "volumes": [],
        "labels": {},
        "build_stages": [],
        "package_managers": [
          "pip"
        ],
        "installed_packages": [],
        "analysis": {
          "is_multistage": false,
          "has_non_root_user": true,
          "exposes_services": true,
          "uses_environment_config": true
        }
      },
      "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\worker\\Dockerfile": {
        "base_images": [
          {
            "image": "maven:3.5-jdk-8-alpine",
            "stage": "build"
          },
          {
            "image": "openjdk:8-jre",
            "stage": null
          }
        ],
        "exposed_ports": [],
        "environment_variables": {},
        "commands": [
          {
            "type": "CMD",
            "command": "[\"java\", \"-XX:+UnlockExperimentalVMOptions\", \"-XX:+UseCGroupMemoryLimitForHeap\", \"-jar\", \"/worker-jar-with-dependencies.jar\"]"
          }
        ],
        "workdir": "/app",
        "user": "1001",
        "volumes": [],
        "labels": {},
        "build_stages": [
          "build"
        ],
        "package_managers": [
          "apk",
          "maven"
        ],
        "installed_packages": [],
        "analysis": {
          "is_multistage": true,
          "has_non_root_user": true,
          "exposes_services": false,
          "uses_environment_config": false
        }
      }
    },
    "orchestration": {
      "kubernetes": [
        {
          "resources": [
            {
              "kind": "ImageStream",
              "apiVersion": "image.openshift.io/v1",
              "name": "result",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "Route",
              "apiVersion": "route.openshift.io/v1",
              "name": "result",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "Service",
              "apiVersion": "v1",
              "name": "result",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {},
              "service_details": {
                "type": "ClusterIP",
                "ports": [
                  {
                    "name": null,
                    "port": 8080,
                    "targetPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "selector": {
                  "app": "result"
                },
                "cluster_ip": null,
                "external_name": null,
                "load_balancer_ip": null
              }
            }
          ],
          "services": {
            "result": {
              "type": "ClusterIP",
              "ports": [
                {
                  "name": null,
                  "port": 8080,
                  "targetPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "selector": {
                "app": "result"
              },
              "cluster_ip": null,
              "external_name": null,
              "load_balancer_ip": null
            }
          },
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 1,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "ImageStream",
              "apiVersion": "image.openshift.io/v1",
              "name": "vote",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "Route",
              "apiVersion": "route.openshift.io/v1",
              "name": "vote",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "Service",
              "apiVersion": "v1",
              "name": "vote",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {},
              "service_details": {
                "type": "ClusterIP",
                "ports": [
                  {
                    "name": null,
                    "port": 8080,
                    "targetPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "selector": {
                  "app": "vote"
                },
                "cluster_ip": null,
                "external_name": null,
                "load_balancer_ip": null
              }
            }
          ],
          "services": {
            "vote": {
              "type": "ClusterIP",
              "ports": [
                {
                  "name": null,
                  "port": 8080,
                  "targetPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "selector": {
                "app": "vote"
              },
              "cluster_ip": null,
              "external_name": null,
              "load_balancer_ip": null
            }
          },
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 1,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "ImageStream",
              "apiVersion": "image.openshift.io/v1",
              "name": "worker",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "Template",
              "apiVersion": "template.openshift.io/v1",
              "name": "postgresql-ephemeral",
              "namespace": "openshift",
              "labels": {
                "samples.operator.openshift.io/managed": "true"
              },
              "annotations": {
                "description": "PostgreSQL database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.\n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing",
                "iconClass": "icon-postgresql",
                "openshift.io/display-name": "PostgreSQL (Ephemeral)",
                "openshift.io/documentation-url": "https://docs.okd.io/latest/using_images/db_images/postgresql.html",
                "openshift.io/long-description": "This template provides a standalone PostgreSQL server with a database created.  The database is not stored on persistent storage, so any restart of the service will result in all data being lost.  The database name, username, and password are chosen via parameters when provisioning this service.",
                "openshift.io/provider-display-name": "Red Hat, Inc.",
                "openshift.io/support-url": "https://access.redhat.com",
                "samples.operator.openshift.io/version": "4.6.0-0.okd-2021-01-23-132511",
                "tags": "database,postgresql"
              }
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "Template",
              "apiVersion": "template.openshift.io/v1",
              "name": "redis-ephemeral",
              "namespace": "openshift",
              "labels": {
                "samples.operator.openshift.io/managed": "true"
              },
              "annotations": {
                "description": "Redis in-memory data structure store, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/5.\n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing",
                "iconClass": "icon-redis",
                "openshift.io/display-name": "Redis (Ephemeral)",
                "openshift.io/documentation-url": "https://github.com/sclorg/redis-container/tree/master/5",
                "openshift.io/long-description": "This template provides a standalone Redis server.  The data is not stored on persistent storage, so any restart of the service will result in all data being lost.",
                "openshift.io/provider-display-name": "Red Hat, Inc.",
                "openshift.io/support-url": "https://access.redhat.com",
                "samples.operator.openshift.io/version": "4.6.0-0.okd-2021-01-23-132511",
                "tags": "database,redis"
              }
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "BuildConfig",
              "apiVersion": "build.openshift.io/v1",
              "name": "result",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "result",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "BuildConfig",
              "apiVersion": "build.openshift.io/v1",
              "name": "vote",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "vote",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "BuildConfig",
              "apiVersion": "build.openshift.io/v1",
              "name": "worker",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "worker",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "result",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "vote",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "worker",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "BuildConfig",
              "apiVersion": "build.openshift.io/v1",
              "name": "result-s2i",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "result",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "BuildConfig",
              "apiVersion": "build.openshift.io/v1",
              "name": "vote-s2i",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "vote",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "BuildConfig",
              "apiVersion": "build.openshift.io/v1",
              "name": "worker-s2i",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        },
        {
          "resources": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "name": "worker",
              "namespace": "default",
              "labels": {
                "app": "voting-app"
              },
              "annotations": {}
            }
          ],
          "services": {},
          "deployments": {},
          "configmaps": {},
          "secrets": [],
          "ingresses": {},
          "persistent_volumes": {},
          "service_dependencies": {},
          "external_endpoints": [],
          "analysis": {
            "resource_count": 1,
            "service_count": 0,
            "deployment_count": 0,
            "uses_configmaps": false,
            "uses_secrets": false,
            "has_ingress": false,
            "has_persistent_storage": false
          }
        }
      ]
    },
    "deployment_configs": []
  },
  "ci_cd_pipelines": {
    "github_actions": [],
    "jenkins": [],
    "azure_devops": [],
    "gitlab_ci": [],
    "quality_gates": [],
    "deployment_stages": []
  },
  "configuration": {
    "properties_files": [],
    "yaml_configs": [
      {
        "raw_config": {
          "kind": "BuildConfig",
          "apiVersion": "build.openshift.io/v1",
          "metadata": {
            "name": "result",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "strategy": {
              "type": "Docker"
            },
            "source": {
              "type": "Git",
              "git": {
                "uri": "https://github.com/Treeptik/openshift-voting-app.git",
                "ref": "master"
              },
              "contextDir": "voting-app/result"
            },
            "output": {
              "to": {
                "kind": "ImageStreamTag",
                "name": "result:latest"
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [
          {
            "path": "spec.source.git.uri",
            "url": "https://github.com/Treeptik/openshift-voting-app.git",
            "type": "http_endpoint"
          }
        ],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 3,
          "has_datasources": false,
          "has_external_services": true,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "result",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              },
              {
                "imageChangeParams": {
                  "automatic": true,
                  "containerNames": [
                    "result"
                  ],
                  "from": {
                    "kind": "ImageStreamTag",
                    "name": "result:latest"
                  }
                },
                "type": "ImageChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "result"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "result"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "result"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "BuildConfig",
          "apiVersion": "build.openshift.io/v1",
          "metadata": {
            "name": "vote",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "strategy": {
              "type": "Docker"
            },
            "source": {
              "type": "Git",
              "git": {
                "uri": "https://github.com/Treeptik/openshift-voting-app.git",
                "ref": "master"
              },
              "contextDir": "voting-app/vote"
            },
            "output": {
              "to": {
                "kind": "ImageStreamTag",
                "name": "vote:latest"
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [
          {
            "path": "spec.source.git.uri",
            "url": "https://github.com/Treeptik/openshift-voting-app.git",
            "type": "http_endpoint"
          }
        ],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 3,
          "has_datasources": false,
          "has_external_services": true,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "vote",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              },
              {
                "imageChangeParams": {
                  "automatic": true,
                  "containerNames": [
                    "vote"
                  ],
                  "from": {
                    "kind": "ImageStreamTag",
                    "name": "vote:latest"
                  }
                },
                "type": "ImageChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "vote"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "vote"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "vote"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "BuildConfig",
          "apiVersion": "build.openshift.io/v1",
          "metadata": {
            "name": "worker",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "strategy": {
              "type": "Docker"
            },
            "source": {
              "type": "Git",
              "git": {
                "uri": "https://github.com/Treeptik/openshift-voting-app.git",
                "ref": "master"
              },
              "contextDir": "voting-app/worker"
            },
            "output": {
              "to": {
                "kind": "ImageStreamTag",
                "name": "worker:latest"
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [
          {
            "path": "spec.source.git.uri",
            "url": "https://github.com/Treeptik/openshift-voting-app.git",
            "type": "http_endpoint"
          }
        ],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 3,
          "has_datasources": false,
          "has_external_services": true,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "worker",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              },
              {
                "imageChangeParams": {
                  "automatic": true,
                  "containerNames": [
                    "worker"
                  ],
                  "from": {
                    "kind": "ImageStreamTag",
                    "name": "worker:latest"
                  }
                },
                "type": "ImageChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "worker"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "worker"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "worker"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "result",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "result"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "result"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "result",
                    "image": "mgrillet/result:latest"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "vote",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "vote"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "vote"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "vote",
                    "image": "mgrillet/vote:latest"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "worker",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "worker"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "worker"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "worker",
                    "image": "mgrillet/worker:latest"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "BuildConfig",
          "apiVersion": "build.openshift.io/v1",
          "metadata": {
            "name": "result-s2i",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "strategy": {
              "sourceStrategy": {
                "from": {
                  "kind": "DockerImage",
                  "name": "centos/nodejs-10-centos7"
                }
              },
              "type": "Source"
            },
            "source": {
              "type": "Git",
              "git": {
                "uri": "https://github.com/Treeptik/openshift-voting-app.git",
                "ref": "master"
              },
              "contextDir": "voting-app/result/src"
            },
            "output": {
              "to": {
                "kind": "ImageStreamTag",
                "name": "result:latest"
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [
          {
            "path": "spec.source.git.uri",
            "url": "https://github.com/Treeptik/openshift-voting-app.git",
            "type": "http_endpoint"
          }
        ],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": true,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "result",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              },
              {
                "imageChangeParams": {
                  "automatic": true,
                  "containerNames": [
                    "result"
                  ],
                  "from": {
                    "kind": "ImageStreamTag",
                    "name": "result:latest"
                  }
                },
                "type": "ImageChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "result"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "result"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "result"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "BuildConfig",
          "apiVersion": "build.openshift.io/v1",
          "metadata": {
            "name": "vote-s2i",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "strategy": {
              "sourceStrategy": {
                "from": {
                  "kind": "DockerImage",
                  "name": "centos/python-38-centos7"
                }
              },
              "type": "Source"
            },
            "source": {
              "type": "Git",
              "git": {
                "uri": "https://github.com/Treeptik/openshift-voting-app.git",
                "ref": "master"
              },
              "contextDir": "voting-app/vote/src"
            },
            "output": {
              "to": {
                "kind": "ImageStreamTag",
                "name": "vote:latest"
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [
          {
            "path": "spec.source.git.uri",
            "url": "https://github.com/Treeptik/openshift-voting-app.git",
            "type": "http_endpoint"
          }
        ],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": true,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "vote",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              },
              {
                "imageChangeParams": {
                  "automatic": true,
                  "containerNames": [
                    "vote"
                  ],
                  "from": {
                    "kind": "ImageStreamTag",
                    "name": "vote:latest"
                  }
                },
                "type": "ImageChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "vote"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "vote"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "vote"
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "BuildConfig",
          "apiVersion": "build.openshift.io/v1",
          "metadata": {
            "name": "worker-s2i",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "strategy": {
              "sourceStrategy": {
                "from": {
                  "kind": "DockerImage",
                  "name": "fabric8/s2i-java:3.1-java8"
                }
              }
            },
            "source": {
              "type": "Git",
              "git": {
                "uri": "https://github.com/Treeptik/openshift-voting-app.git",
                "ref": "master"
              },
              "contextDir": "voting-app/worker/src"
            },
            "output": {
              "to": {
                "kind": "ImageStreamTag",
                "name": "worker:latest"
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [
          {
            "path": "spec.source.git.uri",
            "url": "https://github.com/Treeptik/openshift-voting-app.git",
            "type": "http_endpoint"
          }
        ],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": true,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      },
      {
        "raw_config": {
          "kind": "DeploymentConfig",
          "apiVersion": "apps.openshift.io/v1",
          "metadata": {
            "name": "worker",
            "labels": {
              "app": "voting-app"
            }
          },
          "spec": {
            "triggers": [
              {
                "type": "ConfigChange"
              },
              {
                "imageChangeParams": {
                  "automatic": true,
                  "containerNames": [
                    "worker"
                  ],
                  "from": {
                    "kind": "ImageStreamTag",
                    "name": "worker:latest"
                  }
                },
                "type": "ImageChange"
              }
            ],
            "replicas": 1,
            "selector": {
              "app": "worker"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app": "worker"
                }
              },
              "spec": {
                "securityContext": {
                  "runAsUser": 1001
                },
                "containers": [
                  {
                    "name": "worker",
                    "env": [
                      {
                        "name": "JAVA_APP_JAR",
                        "value": "worker-jar-with-dependencies.jar"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "profiles": [],
        "datasources": [],
        "external_services": [],
        "messaging": [],
        "security_config": {},
        "server_config": {},
        "feature_flags": {},
        "secrets_references": [],
        "cloud_config": {},
        "analysis": {
          "config_depth": 4,
          "has_datasources": false,
          "has_external_services": false,
          "has_messaging": false,
          "has_security_config": false,
          "uses_profiles": false,
          "secrets_count": 0,
          "uses_cloud_services": false
        }
      }
    ],
    "environment_variables": {},
    "external_services": [
      {
        "path": "spec.source.git.uri",
        "url": "https://github.com/Treeptik/openshift-voting-app.git",
        "type": "http_endpoint"
      },
      {
        "path": "spec.source.git.uri",
        "url": "https://github.com/Treeptik/openshift-voting-app.git",
        "type": "http_endpoint"
      },
      {
        "path": "spec.source.git.uri",
        "url": "https://github.com/Treeptik/openshift-voting-app.git",
        "type": "http_endpoint"
      },
      {
        "path": "spec.source.git.uri",
        "url": "https://github.com/Treeptik/openshift-voting-app.git",
        "type": "http_endpoint"
      },
      {
        "path": "spec.source.git.uri",
        "url": "https://github.com/Treeptik/openshift-voting-app.git",
        "type": "http_endpoint"
      },
      {
        "path": "spec.source.git.uri",
        "url": "https://github.com/Treeptik/openshift-voting-app.git",
        "type": "http_endpoint"
      }
    ],
    "datasources": [],
    "secrets_management": []
  },
  "security_posture": {},
  "semantic_analysis": {
    "voting-app": [
      {
        "file_path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\result\\src\\server.js",
        "language": "javascript",
        "api_endpoints": [
          {
            "path": "/",
            "methods": [
              "GET"
            ],
            "handler_function": "",
            "line_number": 84
          }
        ],
        "functions": [],
        "classes": [],
        "database_interactions": [
          {
            "operation": "SELECT",
            "table": null,
            "line_number": 50,
            "raw_query": "SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote"
          }
        ],
        "outbound_http_calls": [],
        "notes": []
      },
      {
        "file_path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\result\\src\\views\\angular.min.js",
        "language": "javascript",
        "api_endpoints": [],
        "functions": [],
        "classes": [],
        "database_interactions": [
          {
            "operation": "MONGO_FIND",
            "table": null,
            "line_number": 44,
            "raw_query": null
          },
          {
            "operation": "MONGO_FIND",
            "table": null,
            "line_number": 293,
            "raw_query": null
          },
          {
            "operation": "MONGO_FIND",
            "table": null,
            "line_number": 293,
            "raw_query": null
          }
        ],
        "outbound_http_calls": [],
        "notes": []
      },
      {
        "file_path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\result\\src\\views\\app.js",
        "language": "javascript",
        "api_endpoints": [],
        "functions": [],
        "classes": [],
        "database_interactions": [],
        "outbound_http_calls": [],
        "notes": []
      },
      {
        "file_path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\result\\src\\views\\socket.io.js",
        "language": "javascript",
        "api_endpoints": [],
        "functions": [],
        "classes": [],
        "database_interactions": [],
        "outbound_http_calls": [],
        "notes": []
      },
      {
        "file_path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\vote\\src\\app.py",
        "language": "python",
        "api_endpoints": [
          {
            "path": "/",
            "methods": [
              "POST",
              "GET"
            ],
            "handler_function": "",
            "line_number": 24
          }
        ],
        "functions": [
          {
            "name": "get_redis",
            "start_line": 19,
            "end_line": 22,
            "calls": [
              "hasattr",
              "Redis"
            ],
            "decorators": []
          },
          {
            "name": "hello",
            "start_line": 25,
            "end_line": 47,
            "calls": [
              "app.route",
              "request.cookies.get",
              "make_response",
              "resp.set_cookie",
              "get_redis",
              "app.logger.info",
              "json.dumps",
              "redis.rpush",
              "render_template",
              "hex",
              "random.getrandbits"
            ],
            "decorators": [
              "app.route('/', methods=['POST', 'GET'])"
            ]
          }
        ],
        "classes": [],
        "database_interactions": [
          {
            "operation": "REDIS_OP",
            "table": null,
            "line_number": 37,
            "raw_query": null
          }
        ],
        "outbound_http_calls": [],
        "notes": []
      },
      {
        "file_path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\worker\\src\\src\\main\\java\\worker\\Worker.java",
        "language": "java",
        "api_endpoints": [],
        "functions": [
          {
            "name": "Worker.main",
            "start_line": 9,
            "end_line": 0,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Worker.updateVote",
            "start_line": 31,
            "end_line": 0,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Worker.connectToRedis",
            "start_line": 48,
            "end_line": 0,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Worker.connectToDB",
            "start_line": 66,
            "end_line": 0,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Worker.sleep",
            "start_line": 96,
            "end_line": 0,
            "calls": [],
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Worker",
            "start_line": 8,
            "end_line": 0,
            "methods": [
              "main",
              "updateVote",
              "connectToRedis",
              "connectToDB",
              "sleep"
            ],
            "base_classes": []
          }
        ],
        "database_interactions": [
          {
            "operation": "INSERT",
            "table": null,
            "line_number": 32,
            "raw_query": "INSERT INTO votes (id, vote) VALUES (?, ?)"
          },
          {
            "operation": "UPDATE",
            "table": null,
            "line_number": 40,
            "raw_query": "UPDATE votes SET vote = ? WHERE id = ?"
          },
          {
            "operation": "UNKNOWN",
            "table": null,
            "line_number": 83,
            "raw_query": "CREATE TABLE IF NOT EXISTS votes (id VARCHAR(255) NOT NULL UNIQUE, vote VARCHAR(255) NOT NULL)"
          },
          {
            "operation": "REDIS_OP",
            "table": null,
            "line_number": 17,
            "raw_query": null
          }
        ],
        "outbound_http_calls": [],
        "notes": []
      },
      {
        "file_path": "C:\\Users\\JAIDEE~2\\AppData\\Local\\Temp\\app_intelligence_kok_hv96\\voting-app\\worker\\src\\src\\Worker\\Program.cs",
        "language": "csharp",
        "api_endpoints": [],
        "functions": [
          {
            "name": "Program.Main",
            "start_line": 15,
            "end_line": 15,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.if",
            "start_line": 34,
            "end_line": 34,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.if",
            "start_line": 45,
            "end_line": 45,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.UpdateVote",
            "start_line": 52,
            "end_line": 52,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.OpenDbConnection",
            "start_line": 69,
            "end_line": 69,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.NpgsqlConnection",
            "start_line": 77,
            "end_line": 77,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.votes",
            "start_line": 96,
            "end_line": 96,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.VARCHAR",
            "start_line": 96,
            "end_line": 96,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.VARCHAR",
            "start_line": 97,
            "end_line": 97,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.OpenRedisConnection",
            "start_line": 105,
            "end_line": 105,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.GetIp",
            "start_line": 126,
            "end_line": 126,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.UpdateVote",
            "start_line": 133,
            "end_line": 133,
            "calls": [],
            "decorators": []
          },
          {
            "name": "Program.votes",
            "start_line": 138,
            "end_line": 138,
            "calls": [],
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Program",
            "start_line": 13,
            "end_line": 13,
            "methods": [
              "Main",
              "if",
              "if",
              "UpdateVote",
              "OpenDbConnection",
              "NpgsqlConnection",
              "votes",
              "VARCHAR",
              "VARCHAR",
              "OpenRedisConnection",
              "GetIp",
              "UpdateVote",
              "votes"
            ],
            "base_classes": []
          }
        ],
        "database_interactions": [
          {
            "operation": "ADO_EXECUTE",
            "table": null,
            "line_number": 58,
            "raw_query": null
          },
          {
            "operation": "ADO_EXECUTE",
            "table": null,
            "line_number": 100,
            "raw_query": null
          },
          {
            "operation": "ADO_EXECUTE",
            "table": null,
            "line_number": 141,
            "raw_query": null
          },
          {
            "operation": "ADO_EXECUTE",
            "table": null,
            "line_number": 146,
            "raw_query": null
          }
        ],
        "outbound_http_calls": [],
        "notes": []
      }
    ]
  },
  "git_history": {
    "total_commits": 0,
    "active_contributors": 0,
    "commit_frequency": {},
    "commit_types": {},
    "hotspot_files": [],
    "development_patterns": [],
    "release_cadence": "Unknown",
    "code_stability": "unknown",
    "team_velocity": {}
  },
  "comprehensive_synthesis": {
    "executive_summary": "The 'voting-app' is a containerized microservices application designed for OpenShift deployment, enabling users to vote for options and view results. It leverages Node.js for the 'result' component and Python/Flask for the 'vote' microservice, with a Java-based 'worker' component. The application is currently assessed as low business criticality and uses ephemeral PostgreSQL and Redis instances, indicating a focus on development and testing rather than production readiness.  Key findings include a lack of robust CI/CD, operational monitoring, security configurations, and a nascent Git history, suggesting it's an early-stage or experimental project. Strategic implications point towards significant effort required to mature this application for production use, including establishing proper infrastructure-as-code, implementing robust CI/CD, enhancing security, and potentially adopting persistent storage solutions.",
    "architecture_assessment": "The application follows a microservices architectural style, with distinct components for 'result', 'vote', and 'worker'. The 'result' component is a Node.js application packaged as a Docker container, exposing port 8080. The 'vote' component is a Python Flask microservice, also containerized and exposing port 8080, dependent on Redis and gunicorn. The 'worker' component is a Java application packaged as a Docker container using a multi-stage build with Maven and OpenJDK.  The current deployment primarily uses OpenShift constructs like ImageStreams, Routes, Services, BuildConfigs, and DeploymentConfigs.  The technology stack includes Node.js, Python (Flask), Java, Docker, and OpenShift.  Scalability and performance are currently undefined due to the lack of explicit configuration for replicas, resource limits, or load balancing within the provided deployment artifacts. The use of ephemeral Redis and PostgreSQL suggests a lack of state persistence, limiting scalability and reliability for production scenarios.  Strengths include the adoption of containerization and a microservices approach, making it adaptable to cloud-native environments like OpenShift. Weaknesses include the absence of production-grade persistence, a lack of defined scaling strategies, missing CI/CD integration, and no clear versioning or release cadence, indicating immaturity.",
    "technology_modernization_plan": "The current technology debt is significant, primarily revolving around the lack of production-grade operational practices and configurations. Key areas include: ephemeral data stores (PostgreSQL and Redis), missing production-ready deployments (e.g., using Deployments instead of DeploymentConfigs where applicable, though this might be standard for the OpenShift context), no defined resource requests/limits in container configurations, and no observed secrets management. Modernization priorities should focus on addressing these gaps. Recommendations include: 1. Implementing persistent storage for PostgreSQL and Redis to ensure data durability. 2. Standardizing on Kubernetes Deployments instead of OpenShift's DeploymentConfigs for better portability and lifecycle management if migrating away from OpenShift in the future. 3. Defining resource requests and limits for all containers to ensure predictable performance and resource allocation. 4. Integrating secrets management for any sensitive configurations. Cloud readiness is moderate, as it's containerized and designed for OpenShift. However, achieving full cloud-native readiness requires addressing the ephemeral data stores and establishing robust CI/CD. A technology upgrade roadmap would involve: moving from ephemeral to persistent storage, potentially upgrading base Docker images to more recent and secure versions, and adopting modern Kubernetes deployment patterns.",
    "security_recommendations": "The current security posture appears to be basic. The analysis indicates that containers run as non-root users (using SCC 'nonroot'), which is a good practice. However, there's no explicit mention of secrets management, TLS configuration, network policies, or vulnerability scanning. Critical security gaps include the potential lack of hardened base images, absence of ingress security controls (like WAF), and the reliance on ephemeral data stores which, while not a direct security vulnerability, could be a concern for data integrity and compliance. Compliance and regulatory considerations are not explicitly addressed in the provided data. Security improvement recommendations include: 1. Implementing a robust secrets management solution (e.g., Kubernetes Secrets, HashiCorp Vault). 2. Enforcing network policies between microservices. 3. Configuring TLS for all external-facing endpoints. 4. Regularly scanning container images for vulnerabilities. 5. Implementing strict RBAC controls within OpenShift/Kubernetes. 6. Ensuring the ephemeral data stores are appropriately secured if used for any sensitive, albeit temporary, data.",
    "operational_maturity": "The CI/CD pipeline maturity is currently very low. The `ci_cd_pipelines` section shows empty arrays for various CI/CD tools (GitHub Actions, Jenkins, etc.), and `deployment_stages` and `quality_gates` are also undefined. This indicates a significant lack of automation for build, test, and deployment processes. DevOps practices are likely immature given the absence of CI/CD. Monitoring and observability gaps are evident, as there are no mentions of logging, metrics collection (Prometheus, Grafana), or tracing. Operational excellence recommendations include: 1. Establishing an automated CI/CD pipeline for all components, starting with basic build and deploy automation. 2. Implementing comprehensive logging and metrics collection for all microservices. 3. Setting up health checks and readiness/liveness probes for containers. 4. Defining service level objectives (SLOs) and service level indicators (SLIs). 5. Automating infrastructure provisioning and configuration using Infrastructure as Code (IaC) principles.",
    "business_impact_analysis": "The business criticality is assessed as 'LOW'. This suggests that the application is likely not core to immediate business operations or revenue generation. The user impact is primarily limited to end-users of the voting application itself. Without more context on the voting options or the purpose of the voting, direct revenue or operational implications are not discernible from the data. However, if this application were to evolve into a more critical function, its current state of immaturity would pose a significant risk. Stakeholder considerations would include ensuring that any future development aligns with business goals, managing expectations regarding the current low criticality, and communicating the necessary investments for potential future growth or productionization.",
    "migration_strategy": "The migration complexity is considered moderate. The application is containerized and uses OpenShift-specific resources, suggesting some platform lock-in. Migrating from ephemeral to persistent storage will add complexity. The recommended migration approach would be a phased approach, prioritizing stabilization and production readiness. A phased migration plan could include: 1. Phase 1: Stabilize core components, implement persistent storage for Redis and PostgreSQL, and establish basic CI/CD pipelines. 2. Phase 2: Implement comprehensive monitoring, logging, and security controls. 3. Phase 3: Optimize performance, refine scaling strategies, and potentially explore migrating from OpenShift-specific resources (like DeploymentConfigs) to standard Kubernetes Deployments if portability is a concern. Risk mitigation strategies would involve thorough testing at each phase, leveraging feature flags for new deployments, and ensuring robust rollback capabilities.",
    "risk_assessment": "Technical risks include the reliance on ephemeral data stores (PostgreSQL and Redis), which poses a high risk to data durability and availability. The absence of robust CI/CD pipelines increases the risk of manual errors and slow deployment cycles. Lack of monitoring and logging hinders quick detection and resolution of issues. Dependencies on specific OpenShift constructs like `DeploymentConfig` and `BuildConfig` could pose a risk if the application needs to be migrated to a different Kubernetes distribution. Business continuity risks are mitigated by the low business criticality, but any future increase in criticality would be exposed by the current operational and technical immaturity. Migration and modernization risks include the potential for data loss during the transition to persistent storage, complexity in establishing a reliable CI/CD pipeline, and ensuring compatibility with updated OpenShift or Kubernetes versions. Risk mitigation priorities would be: 1. Addressing ephemeral storage immediately. 2. Establishing a basic CI/CD pipeline. 3. Implementing logging and monitoring.",
    "effort_estimation": "Development effort estimation is high for production readiness, given the current state. Currently, it appears to be a functional proof-of-concept or development environment setup. To move to a production-ready state, significant effort will be required in CI/CD setup, infrastructure hardening, security implementation, and operationalization. Resource requirements would include backend developers, DevOps engineers, and potentially a QA engineer. Timeline considerations would range from several weeks to months, depending on the desired level of maturity and the availability of resources. Budget implications would include costs for persistent storage, potential licensing for monitoring tools, and engineering time. A rough estimate for initial productionization (persistent storage, basic CI/CD, monitoring) could be 2-4 full-time equivalent engineers for 2-3 months.",
    "recommendations": [
      "Implement persistent storage for PostgreSQL and Redis to ensure data durability and enable stateful operations.",
      "Establish a foundational CI/CD pipeline for automated builds, testing, and deployments across all components.",
      "Integrate comprehensive logging and monitoring solutions (e.g., Prometheus, Grafana, ELK stack) for all microservices to improve observability and troubleshooting.",
      "Define resource requests and limits for all containerized applications to ensure predictable performance and resource utilization.",
      "Implement a secrets management strategy for securely handling any sensitive configuration data.",
      "Review and potentially update base Docker images to more recent, secure, and optimized versions.",
      "Consider migrating from OpenShift `DeploymentConfig` and `BuildConfig` to standard Kubernetes `Deployment` and `BuildConfig` (or alternatives like Argo CD/Tekton) for better portability and adherence to cloud-native standards.",
      "Develop a formal Git workflow and encourage consistent contribution patterns to build a traceable development history.",
      "Define clear API contracts between microservices and consider implementing an API gateway for unified management of external access.",
      "Conduct a security audit and implement hardening measures, including network policies and TLS encryption for all communication."
    ]
  },
  "architecture_insights": {
    "deployment_pattern": "kubernetes",
    "architecture_style": "hybrid",
    "technology_diversity": 2,
    "containerization_level": "partial",
    "orchestration_platform": "kubernetes",
    "ci_cd_maturity": "basic",
    "configuration_management": "basic",
    "service_mesh": false,
    "microservices_score": 5
  },
  "recommendations": [
    "🚀 Implement automated CI/CD pipeline for consistent deployments",
    "✅ Add more quality gates (code coverage, static analysis, security scanning)",
    "🐳 Consider containerizing all components for consistent deployment"
  ]
}